"""adding time datatype to start and deadline

Revision ID: c8980b75cf27
Revises: e409dc3f7044
Create Date: 2025-08-31 20:21:36.788351

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel                     

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c8980b75cf27'
down_revision: Union[str, Sequence[str], None] = 'e409dc3f7044'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tasks', 'title',
               existing_type=sa.VARCHAR(length=10),
               type_=sqlmodel.sql.sqltypes.AutoString(length=50),
               existing_nullable=False)
    op.alter_column('tasks', 'start_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Time(),
               existing_nullable=False)
    op.alter_column('tasks', 'deadline',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Time(),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tasks', 'deadline',
               existing_type=sa.Time(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('tasks', 'start_time',
               existing_type=sa.Time(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('tasks', 'title',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=50),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
    # ### end Alembic commands ###
